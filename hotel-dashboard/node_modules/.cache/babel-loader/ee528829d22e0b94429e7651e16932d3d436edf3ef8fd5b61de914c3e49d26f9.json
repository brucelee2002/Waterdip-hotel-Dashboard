{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\components\\\\ColumnChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnChart = ({\n  data\n}) => {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this); // Handle the case when data is not available\n  }\n\n  // Extract categories and counts from data\n  const categories = data.map(item => item.country);\n  const counts = data.map(item => item.count);\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 350,\n      toolbar: {\n        show: true\n      },\n      animations: {\n        enabled: true,\n        easing: 'easeinout',\n        speed: 400,\n        animateGradually: {\n          enabled: true,\n          delay: 150\n        },\n        dynamicAnimation: {\n          enabled: true,\n          speed: 350\n        }\n      }\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '55%'\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    title: {\n      text: 'Number of Visitors per Country',\n      align: 'center',\n      style: {\n        fontSize: '20px',\n        color: '#333'\n      }\n    },\n    xaxis: {\n      categories,\n      title: {\n        text: 'Countries'\n      },\n      labels: {\n        style: {\n          colors: '#333',\n          fontSize: '12px'\n        }\n      }\n    },\n    yaxis: {\n      title: {\n        text: 'Number of Visitors'\n      }\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        formatter: val => `Country: ${val}` // Use the country name directly\n      },\n      y: {\n        formatter: val => `Visitors: ${val}`\n      }\n    },\n    fill: {\n      colors: ['#1E90FF'],\n      opacity: 0.8\n    },\n    grid: {\n      borderColor: '#e7e7e7',\n      strokeDashArray: 4\n    },\n    responsive: [{\n      breakpoint: 480,\n      options: {\n        legend: {\n          position: 'bottom',\n          horizontalAlign: 'center',\n          floating: false\n        }\n      }\n    }]\n  };\n  const series = [{\n    name: 'Visitors',\n    data: counts // Use counts array\n  }];\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    height: 350\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_c = ColumnChart;\nexport default ColumnChart;\nvar _c;\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ColumnChart","data","length","children","fileName","_jsxFileName","lineNumber","columnNumber","categories","map","item","country","counts","count","options","chart","type","height","toolbar","show","animations","enabled","easing","speed","animateGradually","delay","dynamicAnimation","plotOptions","bar","horizontal","columnWidth","dataLabels","title","text","align","style","fontSize","color","xaxis","labels","colors","yaxis","tooltip","shared","intersect","x","formatter","val","y","fill","opacity","grid","borderColor","strokeDashArray","responsive","breakpoint","legend","position","horizontalAlign","floating","series","name","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/components/ColumnChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface ColumnChartProps {\r\n    data: { country: string; count: number }[]; // Changed to accept array of objects\r\n}\r\n\r\nconst ColumnChart: React.FC<ColumnChartProps> = ({ data }) => {\r\n    if (!data || data.length === 0) {\r\n        return <div>No data available</div>; // Handle the case when data is not available\r\n    }\r\n\r\n    // Extract categories and counts from data\r\n    const categories = data.map(item => item.country);\r\n    const counts = data.map(item => item.count);\r\n\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n            toolbar: {\r\n                show: true,\r\n            },\r\n            animations: {\r\n                enabled: true,\r\n                easing: 'easeinout',\r\n                speed: 400,\r\n                animateGradually: {\r\n                    enabled: true,\r\n                    delay: 150,\r\n                },\r\n                dynamicAnimation: {\r\n                    enabled: true,\r\n                    speed: 350,\r\n                },\r\n            },\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        title: {\r\n            text: 'Number of Visitors per Country',\r\n            align: 'center',\r\n            style: {\r\n                fontSize: '20px',\r\n                color: '#333',\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories,\r\n            title: {\r\n                text: 'Countries',\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: '#333',\r\n                    fontSize: '12px',\r\n                },\r\n            },\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Number of Visitors',\r\n            },\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            x: {\r\n                formatter: (val: string) => `Country: ${val}`, // Use the country name directly\r\n            },\r\n            y: {\r\n                formatter: (val: number) => `Visitors: ${val}`,\r\n            },\r\n        },\r\n        fill: {\r\n            colors: ['#1E90FF'],\r\n            opacity: 0.8,\r\n        },\r\n        grid: {\r\n            borderColor: '#e7e7e7',\r\n            strokeDashArray: 4,\r\n        },\r\n        responsive: [\r\n            {\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        position: 'bottom',\r\n                        horizontalAlign: 'center',\r\n                        floating: false,\r\n                    },\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    const series = [\r\n        {\r\n            name: 'Visitors',\r\n            data: counts, // Use counts array\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Chart options={options} series={series} type=\"bar\" height={350} />\r\n    );\r\n};\r\n\r\nexport default ColumnChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}