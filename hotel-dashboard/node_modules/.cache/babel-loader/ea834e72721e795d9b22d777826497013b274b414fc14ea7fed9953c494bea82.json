{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport TimeSeriesChart from './components/TimeSeriesChart';\nimport ColumnChart from './components/ColumnChart';\nimport SparklineCharts from './components/SparklineCharts';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [dateRange, setDateRange] = useState([null, null]);\n  const [startDate, endDate] = dateRange;\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchData(startDate, endDate);\n    }\n  }, [startDate, endDate]);\n  const fetchData = async (start, end) => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/data', {\n        params: {\n          start: start.toISOString().split('T')[0],\n          end: end.toISOString().split('T')[0]\n        }\n      });\n      setChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hotel Booking Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selectsRange: true,\n      startDate: startDate,\n      endDate: endDate,\n      onChange: update => setDateRange(update),\n      isClearable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), chartData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TimeSeriesChart, {\n        data: chartData.timeSeries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ColumnChart, {\n        data: chartData.visitorsByCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(SparklineCharts, {\n        adultData: [chartData.totalAdults],\n        childrenData: [chartData.totalChildren]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XJVBtS3LbyGEqSkvNBUHXK0cBJM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","DatePicker","TimeSeriesChart","ColumnChart","SparklineCharts","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","chartData","setChartData","dateRange","setDateRange","startDate","endDate","fetchData","start","end","response","get","params","toISOString","split","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","selectsRange","onChange","update","isClearable","timeSeries","visitorsByCountry","adultData","totalAdults","childrenData","totalChildren","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport TimeSeriesChart from './components/TimeSeriesChart';\nimport ColumnChart from './components/ColumnChart';\nimport SparklineCharts from './components/SparklineCharts';\n\ninterface ChartData {\n  timeSeries: { date: string; count: number }[];\n  visitorsByCountry: { country: string; count: number }[];\n  totalAdults: number;\n  totalChildren: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [chartData, setChartData] = useState<ChartData | null>(null);\n  const [dateRange, setDateRange] = useState<[Date | null, Date | null]>([null, null]);\n  const [startDate, endDate] = dateRange;\n\n  useEffect(() => {\n    if (startDate && endDate) {\n      fetchData(startDate, endDate);\n    }\n  }, [startDate, endDate]);\n\n  const fetchData = async (start: Date, end: Date) => {\n    try {\n      const response = await axios.get<ChartData>('http://localhost:5000/api/data', {\n        params: {\n          start: start.toISOString().split('T')[0],\n          end: end.toISOString().split('T')[0]\n        }\n      });\n      setChartData(response.data);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Hotel Booking Dashboard</h1>\n      <DatePicker\n        selectsRange={true}\n        startDate={startDate}\n        endDate={endDate}\n        onChange={(update: [Date | null, Date | null]) => setDateRange(update)}\n        isClearable={true}\n      />\n      {chartData && (\n        <>\n          <TimeSeriesChart data={chartData.timeSeries} />\n          <ColumnChart data={chartData.visitorsByCountry} />\n          <SparklineCharts \n            adultData={[chartData.totalAdults]}\n            childrenData={[chartData.totalChildren]}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}