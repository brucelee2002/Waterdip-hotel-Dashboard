{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\components\\\\ColumnChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnChart = ({\n  data,\n  categories\n}) => {\n  // Check if categories and data are available\n  if (!categories || categories.length === 0 || !data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this); // Handle the case when data is not available\n  }\n  const options = {\n    chart: {\n      type: 'bar',\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        horizontal: false,\n        columnWidth: '55%',\n        endingShape: 'rounded' // Add the ending shape property\n      }\n    },\n    dataLabels: {\n      enabled: true\n    },\n    xaxis: {\n      categories // Use the categories passed\n    },\n    tooltip: {\n      shared: true,\n      intersect: false,\n      x: {\n        formatter: val => `Category: ${val}` // Adjust formatter type\n      },\n      y: {\n        formatter: val => `Value: ${val}` // Adjust formatter type\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: [{\n      name: 'Data',\n      data\n    }],\n    type: \"bar\",\n    height: 350\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_c = ColumnChart;\nexport default ColumnChart;\nvar _c;\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ColumnChart","data","categories","length","children","fileName","_jsxFileName","lineNumber","columnNumber","options","chart","type","height","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","enabled","xaxis","tooltip","shared","intersect","x","formatter","val","y","series","name","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/components/ColumnChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface ColumnChartProps {\r\n    data: number[];\r\n    categories: string[]; // Ensure categories are passed correctly\r\n}\r\n\r\nconst ColumnChart: React.FC<ColumnChartProps> = ({ data, categories }) => {\r\n    // Check if categories and data are available\r\n    if (!categories || categories.length === 0 || !data || data.length === 0) {\r\n        return <div>No data available</div>; // Handle the case when data is not available\r\n    }\r\n\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            type: 'bar',\r\n            height: 350,\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                horizontal: false,\r\n                columnWidth: '55%',\r\n                endingShape: 'rounded', // Add the ending shape property\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n        },\r\n        xaxis: {\r\n            categories, // Use the categories passed\r\n        },\r\n        tooltip: {\r\n            shared: true,\r\n            intersect: false,\r\n            x: {\r\n                formatter: (val: string) => `Category: ${val}`, // Adjust formatter type\r\n            },\r\n            y: {\r\n                formatter: (val: number) => `Value: ${val}`, // Adjust formatter type\r\n            },\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Chart options={options} series={[{ name: 'Data', data }]} type=\"bar\" height={350} />\r\n    );\r\n};\r\n\r\nexport default ColumnChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAW,CAAC,KAAK;EACtE;EACA,IAAI,CAACA,UAAU,IAAIA,UAAU,CAACC,MAAM,KAAK,CAAC,IAAI,CAACF,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IACtE,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACzC;EAEA,MAAMC,OAAoB,GAAG;IACzBC,KAAK,EAAE;MACHC,IAAI,EAAE,KAAK;MACXC,MAAM,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACTC,GAAG,EAAE;QACDC,UAAU,EAAE,KAAK;QACjBC,WAAW,EAAE,KAAK;QAClBC,WAAW,EAAE,SAAS,CAAE;MAC5B;IACJ,CAAC;IACDC,UAAU,EAAE;MACRC,OAAO,EAAE;IACb,CAAC;IACDC,KAAK,EAAE;MACHlB,UAAU,CAAE;IAChB,CAAC;IACDmB,OAAO,EAAE;MACLC,MAAM,EAAE,IAAI;MACZC,SAAS,EAAE,KAAK;MAChBC,CAAC,EAAE;QACCC,SAAS,EAAGC,GAAW,IAAK,aAAaA,GAAG,EAAE,CAAE;MACpD,CAAC;MACDC,CAAC,EAAE;QACCF,SAAS,EAAGC,GAAW,IAAK,UAAUA,GAAG,EAAE,CAAE;MACjD;IACJ;EACJ,CAAC;EAED,oBACI3B,OAAA,CAACF,KAAK;IAACY,OAAO,EAAEA,OAAQ;IAACmB,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAE5B;IAAK,CAAC,CAAE;IAACU,IAAI,EAAC,KAAK;IAACC,MAAM,EAAE;EAAI;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE7F,CAAC;AAACsB,EAAA,GAvCI9B,WAAuC;AAyC7C,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}