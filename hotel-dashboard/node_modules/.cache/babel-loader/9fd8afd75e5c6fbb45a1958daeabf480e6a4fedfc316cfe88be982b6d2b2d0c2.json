{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport LineChart from './components/TimeSeriesChart'; // Import LineChart component\nimport ColumnChart from './components/ColumnChart'; // Import ColumnChart component\nimport SparklineChart from './components/SparklineChart'; // Import SparklineChart component\nimport './App.css'; // Import styles\nimport axios from 'axios'; // Import axios for API requests\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [startDate, setStartDate] = useState(new Date().toISOString().split('T')[0]); // Set initial startDate to current date\n  const [endDate, setEndDate] = useState(new Date().toISOString().split('T')[0]); // Set initial endDate to current date\n  const [chartData, setChartData] = useState({}); // Initialize state for chart data\n  const [error, setError] = useState(''); // Initialize error state\n\n  // Function to fetch data from API\n  const fetchData = async () => {\n    try {\n      // Ensure startDate and endDate are defined\n      if (startDate && endDate) {\n        const response = await axios.get('http://localhost:5000/api/data', {\n          params: {\n            start: startDate,\n            end: endDate\n          } // Fetch data based on date range\n        });\n        console.log(response);\n        setChartData(response.data); // Set the received data\n        setError(''); // Clear error if data is fetched successfully\n      } else {\n        setError('Please select both start and end dates.'); // Error for missing dates\n      }\n    } catch (error) {\n      console.error('Error fetching data', error); // Log error in the console\n      setError('Failed to fetch data. Please try again.'); // Set error message\n    }\n  };\n\n  // Fetch data whenever startDate or endDate changes\n  useEffect(() => {\n    if (startDate && endDate && new Date(startDate) <= new Date(endDate)) {\n      fetchData(); // Fetch data if the date range is valid\n    } else {\n      setError('Invalid date range selected.'); // Set error for invalid date range\n    }\n  }, [startDate, endDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hotel Booking Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-picker-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\",\n        children: \"Start Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"startDate\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endDate\",\n        children: \"End Date: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        id: \"endDate\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 23\n    }, this), \" \", chartData && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-title\",\n          children: \"Number of Visitors per Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), chartData.timeSeries && /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData.timeSeries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 50\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-title\",\n          children: \"Number of Visitors per Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this), chartData.visitorsByCountry && /*#__PURE__*/_jsxDEV(ColumnChart, {\n          data: chartData.visitorsByCountry // Pass the visitors by country data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sparkline-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sparkline-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: \"Total Adult Visitors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SparklineChart, {\n            data: chartData.totalAdults ? [chartData.totalAdults] : [],\n            label: \"Adults\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sparkline-chart\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-title\",\n            children: \"Total Children Visitors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(SparklineChart, {\n            data: chartData.totalChildren ? [chartData.totalChildren] : [],\n            label: \"Children\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"6lRNbC6zVcwoULaVj3O6I3g3+Yk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","ColumnChart","SparklineChart","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","startDate","setStartDate","Date","toISOString","split","endDate","setEndDate","chartData","setChartData","error","setError","fetchData","response","get","params","start","end","console","log","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","timeSeries","visitorsByCountry","totalAdults","label","totalChildren","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport LineChart from './components/TimeSeriesChart'; // Import LineChart component\nimport ColumnChart from './components/ColumnChart';  // Import ColumnChart component\nimport SparklineChart from './components/SparklineChart'; // Import SparklineChart component\nimport './App.css'; // Import styles\nimport axios from 'axios'; // Import axios for API requests\n\nconst App: React.FC = () => {\n    const [startDate, setStartDate] = useState<string>(new Date().toISOString().split('T')[0]); // Set initial startDate to current date\n    const [endDate, setEndDate] = useState<string>(new Date().toISOString().split('T')[0]); // Set initial endDate to current date\n    const [chartData, setChartData] = useState<any>({}); // Initialize state for chart data\n    const [error, setError] = useState<string>(''); // Initialize error state\n\n    // Function to fetch data from API\n    const fetchData = async () => {\n        try {\n            // Ensure startDate and endDate are defined\n            if (startDate && endDate) {\n                const response = await axios.get('http://localhost:5000/api/data', { \n                    params: { start: startDate, end: endDate } // Fetch data based on date range\n                });\n                console.log(response);\n                setChartData(response.data); // Set the received data\n                setError(''); // Clear error if data is fetched successfully\n            } else {\n                setError('Please select both start and end dates.'); // Error for missing dates\n            } \n        } catch (error) {\n            console.error('Error fetching data', error); // Log error in the console\n            setError('Failed to fetch data. Please try again.'); // Set error message\n        }\n    };\n\n    // Fetch data whenever startDate or endDate changes\n    useEffect(() => {\n        if (startDate && endDate && new Date(startDate) <= new Date(endDate)) {\n            fetchData(); // Fetch data if the date range is valid\n        } else {\n            setError('Invalid date range selected.'); // Set error for invalid date range\n        }\n    }, [startDate, endDate]);\n\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"header\">\n                <h1>Hotel Booking Dashboard</h1> {/* Header for the dashboard */}\n            </div>\n            <div className=\"date-picker-container\">\n                <label htmlFor=\"startDate\">Start Date: </label>\n                <input \n                    type=\"date\" \n                    id=\"startDate\" \n                    value={startDate} \n                    onChange={e => setStartDate(e.target.value)} \n                />\n                <label htmlFor=\"endDate\">End Date: </label>\n                <input \n                    type=\"date\" \n                    id=\"endDate\" \n                    value={endDate} \n                    onChange={e => setEndDate(e.target.value)} \n                />\n            </div>\n\n            {error && <div className=\"error-message\">{error}</div>} {/* Display error message if any */}\n\n            {chartData && (\n                <>\n                    <div className=\"chart-container\">\n                        <div className=\"chart-title\">Number of Visitors per Day</div>\n                        {chartData.timeSeries && <LineChart data={chartData.timeSeries} />} {/* Pass time series data to LineChart */}\n                    </div>\n\n                    <div className=\"chart-container\">\n                        <div className=\"chart-title\">Number of Visitors per Country</div>\n                        {chartData.visitorsByCountry && (\n                            <ColumnChart \n                                data={chartData.visitorsByCountry} // Pass the visitors by country data\n                            />\n                        )}\n                    </div>\n\n                    <div className=\"sparkline-container\">\n                        <div className=\"sparkline-chart\">\n                            <div className=\"chart-title\">Total Adult Visitors</div>\n                            <SparklineChart data={chartData.totalAdults ? [chartData.totalAdults] : []} label=\"Adults\" />\n                        </div>\n                        <div className=\"sparkline-chart\">\n                            <div className=\"chart-title\">Total Children Visitors</div>\n                            <SparklineChart data={chartData.totalChildren ? [chartData.totalChildren] : []} label=\"Children\" />\n                        </div>\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,8BAA8B,CAAC,CAAC;AACtD,OAAOC,WAAW,MAAM,0BAA0B,CAAC,CAAE;AACrD,OAAOC,cAAc,MAAM,6BAA6B,CAAC,CAAC;AAC1D,OAAO,WAAW,CAAC,CAAC;AACpB,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAS,IAAIc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC5F,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAS,IAAIc,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACxF,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACrD,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAS,EAAE,CAAC,CAAC,CAAC;;EAEhD;EACA,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA;MACA,IAAIX,SAAS,IAAIK,OAAO,EAAE;QACtB,MAAMO,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,GAAG,CAAC,gCAAgC,EAAE;UAC/DC,MAAM,EAAE;YAAEC,KAAK,EAAEf,SAAS;YAAEgB,GAAG,EAAEX;UAAQ,CAAC,CAAC;QAC/C,CAAC,CAAC;QACFY,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;QACrBJ,YAAY,CAACI,QAAQ,CAACO,IAAI,CAAC,CAAC,CAAC;QAC7BT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB,CAAC,MAAM;QACHA,QAAQ,CAAC,yCAAyC,CAAC,CAAC,CAAC;MACzD;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZQ,OAAO,CAACR,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC,CAAC,CAAC;MAC7CC,QAAQ,CAAC,yCAAyC,CAAC,CAAC,CAAC;IACzD;EACJ,CAAC;;EAED;EACArB,SAAS,CAAC,MAAM;IACZ,IAAIW,SAAS,IAAIK,OAAO,IAAI,IAAIH,IAAI,CAACF,SAAS,CAAC,IAAI,IAAIE,IAAI,CAACG,OAAO,CAAC,EAAE;MAClEM,SAAS,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACHD,QAAQ,CAAC,8BAA8B,CAAC,CAAC,CAAC;IAC9C;EACJ,CAAC,EAAE,CAACV,SAAS,EAAEK,OAAO,CAAC,CAAC;EAExB,oBACIV,OAAA;IAAKyB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAChC1B,OAAA;MAAKyB,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnB1B,OAAA;QAAA0B,QAAA,EAAI;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACN9B,OAAA;MAAKyB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBAClC1B,OAAA;QAAO+B,OAAO,EAAC,WAAW;QAAAL,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/C9B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,WAAW;QACdC,KAAK,EAAE7B,SAAU;QACjB8B,QAAQ,EAAEC,CAAC,IAAI9B,YAAY,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACF9B,OAAA;QAAO+B,OAAO,EAAC,SAAS;QAAAL,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3C9B,OAAA;QACIgC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,SAAS;QACZC,KAAK,EAAExB,OAAQ;QACfyB,QAAQ,EAAEC,CAAC,IAAIzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELhB,KAAK,iBAAId,OAAA;MAAKyB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEZ;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAAC,GAAC,EAEvDlB,SAAS,iBACNZ,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACI1B,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B1B,OAAA;UAAKyB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAC5DlB,SAAS,CAAC0B,UAAU,iBAAItC,OAAA,CAACL,SAAS;UAAC6B,IAAI,EAAEZ,SAAS,CAAC0B;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAAC,GAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnE,CAAC,eAEN9B,OAAA;QAAKyB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5B1B,OAAA;UAAKyB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAA8B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAChElB,SAAS,CAAC2B,iBAAiB,iBACxBvC,OAAA,CAACJ,WAAW;UACR4B,IAAI,EAAEZ,SAAS,CAAC2B,iBAAkB,CAAC;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN9B,OAAA;QAAKyB,SAAS,EAAC,qBAAqB;QAAAC,QAAA,gBAChC1B,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5B1B,OAAA;YAAKyB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvD9B,OAAA,CAACH,cAAc;YAAC2B,IAAI,EAAEZ,SAAS,CAAC4B,WAAW,GAAG,CAAC5B,SAAS,CAAC4B,WAAW,CAAC,GAAG,EAAG;YAACC,KAAK,EAAC;UAAQ;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5F,CAAC,eACN9B,OAAA;UAAKyB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5B1B,OAAA;YAAKyB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAAC;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1D9B,OAAA,CAACH,cAAc;YAAC2B,IAAI,EAAEZ,SAAS,CAAC8B,aAAa,GAAG,CAAC9B,SAAS,CAAC8B,aAAa,CAAC,GAAG,EAAG;YAACD,KAAK,EAAC;UAAU;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA,eACR,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC1B,EAAA,CAzFID,GAAa;AAAAwC,EAAA,GAAbxC,GAAa;AA2FnB,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}