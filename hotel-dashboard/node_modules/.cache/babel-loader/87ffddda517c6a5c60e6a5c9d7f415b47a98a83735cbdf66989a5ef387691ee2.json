{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\components\\\\ColumnChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColumnChart = ({\n  data\n}) => {\n  const options = {\n    chart: {\n      type: 'bar',\n      // Explicitly define the type as 'bar'\n      height: 350\n    },\n    plotOptions: {\n      bar: {\n        dataLabels: {\n          position: 'top'\n        }\n      }\n    },\n    dataLabels: {\n      enabled: true,\n      formatter: val => `${val}`,\n      offsetY: -20,\n      style: {\n        fontSize: '12px',\n        colors: ['#304758']\n      }\n    },\n    xaxis: {\n      categories: data.categories // Ensure this matches your data structure\n    },\n    yaxis: {\n      title: {\n        text: 'Number of Visitors'\n      }\n    }\n  };\n  const series = [{\n    name: 'Visitors',\n    data: data.visitors // Ensure this matches your data structure\n  }];\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: series,\n    type: \"bar\",\n    height: 350\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n};\n_c = ColumnChart;\nexport default ColumnChart;\nvar _c;\n$RefreshReg$(_c, \"ColumnChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","ColumnChart","data","options","chart","type","height","plotOptions","bar","dataLabels","position","enabled","formatter","val","offsetY","style","fontSize","colors","xaxis","categories","yaxis","title","text","series","name","visitors","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/components/ColumnChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\n\r\ninterface Props {\r\n    data: any; // Use a more specific type based on your data structure\r\n}\r\n\r\nconst ColumnChart: React.FC<Props> = ({ data }) => {\r\n    const options = {\r\n        chart: {\r\n            type: 'bar' as const, // Explicitly define the type as 'bar'\r\n            height: 350,\r\n        },\r\n        plotOptions: {\r\n            bar: {\r\n                dataLabels: {\r\n                    position: 'top',\r\n                },\r\n            },\r\n        },\r\n        dataLabels: {\r\n            enabled: true,\r\n            formatter: (val: number) => `${val}`,\r\n            offsetY: -20,\r\n            style: {\r\n                fontSize: '12px',\r\n                colors: ['#304758'],\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: data.categories, // Ensure this matches your data structure\r\n        },\r\n        yaxis: {\r\n            title: {\r\n                text: 'Number of Visitors',\r\n            },\r\n        },\r\n    };\r\n\r\n    const series = [{\r\n        name: 'Visitors',\r\n        data: data.visitors, // Ensure this matches your data structure\r\n    }];\r\n\r\n    return <Chart options={options} series={series} type=\"bar\" height={350} />;\r\n};\r\n\r\nexport default ColumnChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMrC,MAAMC,WAA4B,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/C,MAAMC,OAAO,GAAG;IACZC,KAAK,EAAE;MACHC,IAAI,EAAE,KAAc;MAAE;MACtBC,MAAM,EAAE;IACZ,CAAC;IACDC,WAAW,EAAE;MACTC,GAAG,EAAE;QACDC,UAAU,EAAE;UACRC,QAAQ,EAAE;QACd;MACJ;IACJ,CAAC;IACDD,UAAU,EAAE;MACRE,OAAO,EAAE,IAAI;MACbC,SAAS,EAAGC,GAAW,IAAK,GAAGA,GAAG,EAAE;MACpCC,OAAO,EAAE,CAAC,EAAE;MACZC,KAAK,EAAE;QACHC,QAAQ,EAAE,MAAM;QAChBC,MAAM,EAAE,CAAC,SAAS;MACtB;IACJ,CAAC;IACDC,KAAK,EAAE;MACHC,UAAU,EAAEjB,IAAI,CAACiB,UAAU,CAAE;IACjC,CAAC;IACDC,KAAK,EAAE;MACHC,KAAK,EAAE;QACHC,IAAI,EAAE;MACV;IACJ;EACJ,CAAC;EAED,MAAMC,MAAM,GAAG,CAAC;IACZC,IAAI,EAAE,UAAU;IAChBtB,IAAI,EAAEA,IAAI,CAACuB,QAAQ,CAAE;EACzB,CAAC,CAAC;EAEF,oBAAOzB,OAAA,CAACF,KAAK;IAACK,OAAO,EAAEA,OAAQ;IAACoB,MAAM,EAAEA,MAAO;IAAClB,IAAI,EAAC,KAAK;IAACC,MAAM,EAAE;EAAI;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9E,CAAC;AAACC,EAAA,GAtCI7B,WAA4B;AAwClC,eAAeA,WAAW;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}