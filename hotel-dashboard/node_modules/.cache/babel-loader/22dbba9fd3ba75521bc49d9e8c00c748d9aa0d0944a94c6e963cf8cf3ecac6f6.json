{"ast":null,"code":"var _jsxFileName = \"D:\\\\EVERYTHING\\\\Waterdip\\\\frontend_project\\\\hotel-dashboard\\\\src\\\\components\\\\SparklineChart.tsx\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SparklineChart = ({\n  data,\n  label\n}) => {\n  // Check if data is available\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this); // Handle the case when data is not available\n  }\n  const options = {\n    chart: {\n      type: 'line',\n      sparkline: {\n        enabled: true\n      },\n      toolbar: {\n        show: false\n      }\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 2\n    },\n    tooltip: {\n      fixed: {\n        enabled: false\n      },\n      x: {\n        show: true\n      },\n      y: {\n        formatter: value => `${value}`\n      }\n    },\n    colors: ['#ff1654'],\n    grid: {\n      padding: {\n        right: 20\n      }\n    },\n    xaxis: {\n      categories: data.map((_, index) => `${index + 1}`),\n      labels: {\n        show: true\n      }\n    },\n    yaxis: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: options,\n    series: [{\n      name: label,\n      data\n    }],\n    type: \"line\",\n    height: 100\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_c = SparklineChart;\nexport default SparklineChart;\nvar _c;\n$RefreshReg$(_c, \"SparklineChart\");","map":{"version":3,"names":["React","Chart","jsxDEV","_jsxDEV","SparklineChart","data","label","length","children","fileName","_jsxFileName","lineNumber","columnNumber","options","chart","type","sparkline","enabled","toolbar","show","stroke","curve","width","tooltip","fixed","x","y","formatter","value","colors","grid","padding","right","xaxis","categories","map","_","index","labels","yaxis","series","name","height","_c","$RefreshReg$"],"sources":["D:/EVERYTHING/Waterdip/frontend_project/hotel-dashboard/src/components/SparklineChart.tsx"],"sourcesContent":["import React from 'react';\r\nimport Chart from 'react-apexcharts';\r\nimport { ApexOptions } from 'apexcharts';\r\n\r\ninterface SparklineChartProps {\r\n    data: number[]; // Assuming data is an array of numbers\r\n    label: string;\r\n}\r\n\r\nconst SparklineChart: React.FC<SparklineChartProps> = ({ data, label }) => {\r\n    // Check if data is available\r\n    if (!data || data.length === 0) {\r\n        return <div>No data available</div>; // Handle the case when data is not available\r\n    }\r\n\r\n    const options: ApexOptions = {\r\n        chart: {\r\n            type: 'line',\r\n            sparkline: {\r\n                enabled: true,\r\n            },\r\n            toolbar: {\r\n                show: false,\r\n            },\r\n        },\r\n        stroke: {\r\n            curve: 'smooth',\r\n            width: 2,\r\n        },\r\n        tooltip: {\r\n            fixed: {\r\n                enabled: false,\r\n            },\r\n            x: {\r\n                show: true,\r\n            },\r\n            y: {\r\n                formatter: (value: number) => `${value}`,\r\n            },\r\n        },\r\n        colors: ['#ff1654'],\r\n        grid: {\r\n            padding: {\r\n                right: 20,\r\n            },\r\n        },\r\n        xaxis: {\r\n            categories: data.map((_, index) => `${index + 1}`),\r\n            labels: {\r\n                show: true,\r\n            },\r\n        },\r\n        yaxis: {\r\n            show: true,\r\n        },\r\n    };\r\n\r\n    return (\r\n        <Chart options={options} series={[{ name: label, data }]} type=\"line\" height={100} />\r\n    );\r\n};\r\n\r\nexport default SparklineChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrC,MAAMC,cAA6C,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EACvE;EACA,IAAI,CAACD,IAAI,IAAIA,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOJ,OAAA;MAAAK,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EACzC;EAEA,MAAMC,OAAoB,GAAG;IACzBC,KAAK,EAAE;MACHC,IAAI,EAAE,MAAM;MACZC,SAAS,EAAE;QACPC,OAAO,EAAE;MACb,CAAC;MACDC,OAAO,EAAE;QACLC,IAAI,EAAE;MACV;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,KAAK,EAAE,QAAQ;MACfC,KAAK,EAAE;IACX,CAAC;IACDC,OAAO,EAAE;MACLC,KAAK,EAAE;QACHP,OAAO,EAAE;MACb,CAAC;MACDQ,CAAC,EAAE;QACCN,IAAI,EAAE;MACV,CAAC;MACDO,CAAC,EAAE;QACCC,SAAS,EAAGC,KAAa,IAAK,GAAGA,KAAK;MAC1C;IACJ,CAAC;IACDC,MAAM,EAAE,CAAC,SAAS,CAAC;IACnBC,IAAI,EAAE;MACFC,OAAO,EAAE;QACLC,KAAK,EAAE;MACX;IACJ,CAAC;IACDC,KAAK,EAAE;MACHC,UAAU,EAAE7B,IAAI,CAAC8B,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK,GAAGA,KAAK,GAAG,CAAC,EAAE,CAAC;MAClDC,MAAM,EAAE;QACJnB,IAAI,EAAE;MACV;IACJ,CAAC;IACDoB,KAAK,EAAE;MACHpB,IAAI,EAAE;IACV;EACJ,CAAC;EAED,oBACIhB,OAAA,CAACF,KAAK;IAACY,OAAO,EAAEA,OAAQ;IAAC2B,MAAM,EAAE,CAAC;MAAEC,IAAI,EAAEnC,KAAK;MAAED;IAAK,CAAC,CAAE;IAACU,IAAI,EAAC,MAAM;IAAC2B,MAAM,EAAE;EAAI;IAAAjC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE7F,CAAC;AAAC+B,EAAA,GAnDIvC,cAA6C;AAqDnD,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}